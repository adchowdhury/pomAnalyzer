package app.anisan.pomAnalyzer;

import app.anisan.pomAnalyzer.log.Logger;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.web.reactive.function.client.WebClient;

public final class VulnerabilityUpdater {

    public static void updateVulnerabilities(POMDependencyObject pomDependencyObject) throws Throwable {

        WebClient webClient = WebClient.create();
        String responseStr = webClient.get()
                .uri("https://mvnrepository.com/artifact/" + pomDependencyObject.getGroupID() + "/" + pomDependencyObject.getArtifactID()
                        + "/" + pomDependencyObject.getCurrentVersion()).retrieve()
                .bodyToMono(String.class).block();

        Document doc = Jsoup.parse(responseStr);

        if (responseStr.contains("Vulnerabilities")) {
            Logger.log(responseStr, App.verbose);

            Element thElement = doc.select("th:matchesOwn(^Vulnerabilities$)").first();
            if (thElement != null) {
                Elements links = thElement.nextElementSibling().select("a.vuln");
                for (Element link : links) {
                    if (link.hasClass("more")) {
                        continue;
                    }
                    //System.out.println(link.text());
                    //Vulnerability v = new Vulnerability(link.text());
                    pomDependencyObject.getVulnerabilities().add(link.text());
                }

            }


        }
        //^\\s*New\\s+Version\\s*$
        if (responseStr.contains("New Version")) {
            Element newVersion = doc.select("th:matchesOwn(^\\s*New\\s+Version\\s*$)").first();
            pomDependencyObject.setLatestVersion(newVersion.parent().select("a").first().text());
            Logger.log(newVersion.parent().select("a").first().text(), App.verbose);
        }
    }
}
